{"version":3,"sources":["scripts/classes/ExpandMenu.js","scripts/classes/ReadPdf.js","scripts/pages/course1.js"],"names":["ExpandMenu","toggleId","navBarId","toggle","document","getElementById","navBar","addEventListener","classList","ReadPdf","fields","input","pdftext","PDFJS","workerSrc","readPdf","fReader","FileReader","readAsDataURL","files","onloadend","event","convertDataURIToBinary","target","result","dataURI","BASE64_MARKER","base64Index","indexOf","length","base64","substring","raw","window","atob","rawLength","array","Uint8Array","ArrayBuffer","i","charCodeAt","pdfAsArray","pageNum","PDFDocumentInstance","Promise","resolve","reject","getPage","then","pdfPage","getTextContent","textContent","textItems","items","finalString","item","str","getDocument","pdf","pdfDocument","pagesPromises","pdfInfo","numPages","pageNumber","push","getPageText","all","pagesText","concat","addLineBreak","findFields","reason","console","error","regexp","originText","split","results","matchAll","splice","index","join","text","forEach","field","search","exist","start","end","sort","sortFields","putFieldsContent","a","b","obj","content","trim","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","db","firestore","expander","expand","extractText"],"mappings":"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","file":"course1.aa7442f0.js","sourceRoot":"..\\src","sourcesContent":["/* Expander menu */\r\n\r\nclass ExpandMenu{\r\n\r\n    constructor(toggleId, navBarId){\r\n        this.toggle = document.getElementById(toggleId);\r\n        this.navBar = document.getElementById(navBarId);\r\n        \r\n    }\r\n\r\n    expand(){\r\n        if(this.toggle && this.navBar){\r\n            this.toggle.addEventListener('click', ()=>{\r\n                this.navBar.classList.toggle('expand');\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default ExpandMenu;","class ReadPdf{\r\n\r\n    constructor(fields, input){\r\n        this.fields = fields;\r\n        this.input = input;\r\n        this.pdftext = \"\";\r\n        PDFJS.workerSrc = '';\r\n    }\r\n\r\n    //--------------------------- READ PDF ------------------------------\r\n    extractText() {\r\n        var readPdf = new ReadPdf(this.fields, this.input);\r\n        var fReader = new FileReader();\r\n        fReader.readAsDataURL(this.input.files[0]);\r\n        // console.log(input.files[0]);\r\n        fReader.onloadend = function (event) {\r\n            readPdf.convertDataURIToBinary(event.target.result, readPdf);\r\n        }\r\n    }\r\n    \r\n    convertDataURIToBinary(dataURI, readPdf) {\r\n        var BASE64_MARKER = ';base64,';\r\n        var base64Index = dataURI.indexOf(BASE64_MARKER) + BASE64_MARKER.length;\r\n        var base64 = dataURI.substring(base64Index);\r\n        var raw = window.atob(base64);\r\n        var rawLength = raw.length;\r\n        var array = new Uint8Array(new ArrayBuffer(rawLength));\r\n\r\n        for (var i = 0; i < rawLength; i++) {\r\n            array[i] = raw.charCodeAt(i);\r\n        }\r\n        readPdf.pdfAsArray(array, readPdf)\r\n    }\r\n\r\n    getPageText(pageNum, PDFDocumentInstance) {\r\n        // Return a Promise that is solved once the text of the page is retrieven\r\n        return new Promise(function (resolve, reject) {\r\n            PDFDocumentInstance.getPage(pageNum).then(function (pdfPage) {\r\n                // The main trick to obtain the text of the PDF page, use the getTextContent method\r\n                pdfPage.getTextContent().then(function (textContent) {\r\n                    var textItems = textContent.items;\r\n                    var finalString = \"\";\r\n                    \r\n                    // Concatenate the string of the item to the final string\r\n                    for (var i = 0; i < textItems.length; i++) {\r\n                        var item = textItems[i];\r\n                        finalString += item.str + \"\";\r\n                    }\r\n\r\n                    // Solve promise with the text retrieven from the page\r\n                    resolve(finalString);\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    pdfAsArray(pdfAsArray, readPdf) {\r\n\r\n        PDFJS.getDocument(pdfAsArray).then(function (pdf) {\r\n\r\n            var pdfDocument = pdf;\r\n            // Create an array that will contain our promises\r\n            var pagesPromises = [];\r\n\r\n            for (var i = 0; i < pdf.pdfInfo.numPages; i++) {\r\n                // Required to prevent that i is always the total of pages\r\n                (function (pageNumber) {\r\n                    // Store the promise of getPageText that returns the text of a page\r\n                    pagesPromises.push(readPdf.getPageText(pageNumber, pdfDocument));\r\n                })(i + 1);\r\n            }\r\n            // Execute all the promises\r\n            Promise.all(pagesPromises).then(function (pagesText) {\r\n                // Display text of all the pages in the console\r\n                // e.g [\"Text content page 1\", \"Text content page 2\", \"Text content page 3\" ... ]\r\n                // representing every single page of PDF Document by array indexing\r\n                for (var pageNum = 0; pageNum < pagesText.length; pageNum++) {\r\n                    //var div = document.getElementById('output');\r\n                    //div.innerHTML += (outputStr + pagesText[pageNum]);\r\n                    readPdf.pdftext = readPdf.pdftext.concat(pagesText[pageNum]);\r\n                };\r\n                readPdf.addLineBreak(readPdf);\r\n                readPdf.findFields(readPdf.pdftext, readPdf);\r\n            });\r\n        }, function (reason) {\r\n            // PDF loading error\r\n            console.error(reason);\r\n        });\r\n    }\r\n\r\n    //--------------------------- SEPARATE PDF ------------------------------\r\n    addLineBreak(readPdf){\r\n        var regexp = / [0-9]\\./g;\r\n        var originText = readPdf.pdftext.split('');\r\n        var results = [...readPdf.pdftext.matchAll(regexp)];\r\n        for (let i = 0; i < results.length; i++) {\r\n            originText.splice(((results[i].index)+i), 0, \"<br>\");\r\n        }\r\n        readPdf.pdftext = originText.join('');\r\n    }\r\n\r\n    findFields(text, readPdf){\r\n        //if found the field, save the begin and end position of it in the string\r\n        readPdf.fields.forEach(field =>{\r\n            if(text.search(field.field) != -1){\r\n                field.exist = true;\r\n                field.start = text.search(field.field);\r\n                field.end = text.search(field.field) + field.field.length;\r\n            }\r\n        });\r\n\r\n        //sort fields in order of start\r\n        readPdf.fields.sort(readPdf.sortFields);\r\n        readPdf.putFieldsContent(readPdf.fields, text);\r\n    }\r\n\r\n    sortFields( a, b ) {\r\n        return a.start - b.start;\r\n    }\r\n\r\n    putFieldsContent(array, originText){\r\n        array.forEach((obj, index) =>{\r\n            if(obj.end != 0){ //to all fields that exist\r\n                if(index+1 < array.length){\r\n                    var content = originText.substring(obj.end, array[index+1].start).trim();\r\n                    obj.content = content;\r\n                    //console.log(obj.field, obj.content);\r\n                }else{\r\n                    var content = originText.substring(obj.end);\r\n                    obj.content = content;\r\n                    //console.log(obj.field, obj.content);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default ReadPdf;","import ExpandMenu from '../classes/ExpandMenu';\r\nimport ReadPdf from '../classes/ReadPdf';\r\n\r\n// For Firebase JavaScript SDK v7.20.0 and later, `measurementId` is an optional field\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDjl6bYnNz0DdeWM7hWxITVpn1BQq6SSjI\",\r\n    authDomain: \"pdg-db.firebaseapp.com\",\r\n    projectId: \"pdg-db\",\r\n    storageBucket: \"pdg-db.appspot.com\",\r\n    messagingSenderId: \"848702577304\",\r\n    appId: \"1:848702577304:web:89c4212e674efb5c3bceed\",\r\n    measurementId: \"G-SBDH6RW0HW\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nwindow.addEventListener('load',()=>{\r\n    var auth = firebase.auth();\r\n    var db = firebase.firestore();\r\n\r\n    var expander = new ExpandMenu('nav-toggle', 'navBar');\r\n    expander.expand();\r\n\r\n\r\n    var input = document.getElementById(\"file-id\");\r\n\r\n    //--------------------------- SYLLABUS FIELDS ------------------------------\r\n    var fields = [\r\n        {\r\n            \"field\" : \"Parte 1:\",\r\n            \"exist\" : false,\r\n            \"start\" : 0,\r\n            \"end\" : 0,\r\n            \"content\" : \"\"\r\n        },\r\n        {\r\n            \"field\" : \"Código-Curso:\",\r\n            \"exist\" : false,\r\n            \"start\" : 0,\r\n            \"end\" : 0,\r\n            \"content\" : \"\"\r\n        },\r\n        {\r\n            \"field\" : \"Tiene como prerrequisito:\",\r\n            \"exist\" : false,\r\n            \"start\" : 0,\r\n            \"end\" : 0,\r\n            \"content\" : \"\"\r\n        },\r\n        {\r\n            \"field\" : \"Programa-Semestre:\",\r\n            \"exist\" : false,\r\n            \"start\" : 0,\r\n            \"end\" : 0,\r\n            \"content\" : \"\"\r\n        },\r\n        {\r\n            \"field\" : \"Intensidad semanal:\",\r\n            \"exist\" : false,\r\n            \"start\" : 0,\r\n            \"end\" : 0,\r\n            \"content\" : \"\"\r\n        },\r\n        {\r\n            \"field\" : \"Créditos:\",\r\n            \"exist\" : false,\r\n            \"start\" : 0,\r\n            \"end\" : 0,\r\n            \"content\" : \"\"\r\n        },\r\n        {\r\n            \"field\" : \"Objetivo General:\",\r\n            \"exist\" : false,\r\n            \"start\" : 0,\r\n            \"end\" : 0,\r\n            \"content\" : \"\"\r\n        },\r\n        {\r\n            \"field\" : \"Parte 2:\",\r\n            \"exist\" : false,\r\n            \"start\" : 0,\r\n            \"end\" : 0,\r\n            \"content\" : \"\"\r\n        },\r\n        {\r\n            \"field\" : \"Objetivos terminales\",\r\n            \"exist\" : false,\r\n            \"start\" : 0,\r\n            \"end\" : 0,\r\n            \"content\" : \"\"\r\n        },\r\n        {\r\n            \"field\" : \"Parte 3: Objetivos Específicos\",\r\n            \"exist\" : false,\r\n            \"start\" : 0,\r\n            \"end\" : 0,\r\n            \"content\" : \"\"\r\n        },\r\n        {\r\n            \"field\" : \"Unidad 1:\",\r\n            \"exist\" : false,\r\n            \"start\" : 0,\r\n            \"end\" : 0,\r\n            \"content\" : \"\"\r\n        },\r\n        {\r\n            \"field\" : \"Unidad 2:\",\r\n            \"exist\" : false,\r\n            \"start\" : 0,\r\n            \"end\" : 0,\r\n            \"content\" : \"\"\r\n        },\r\n        {\r\n            \"field\" : \"Unidad 3:\",\r\n            \"exist\" : false,\r\n            \"start\" : 0,\r\n            \"end\" : 0,\r\n            \"content\" : \"\"\r\n        },\r\n        {\r\n            \"field\" : \"Unidad 4:\",\r\n            \"exist\" : false,\r\n            \"start\" : 0,\r\n            \"end\" : 0,\r\n            \"content\" : \"\"\r\n        },\r\n        {\r\n            \"field\" : \"Unidad 5:\",\r\n            \"exist\" : false,\r\n            \"start\" : 0,\r\n            \"end\" : 0,\r\n            \"content\" : \"\"\r\n        },\r\n        {\r\n            \"field\" : \"Unidad 6:\",\r\n            \"exist\" : false,\r\n            \"start\" : \"\",\r\n            \"end\" : 0,\r\n            \"content\" : \"\"\r\n        },\r\n    ]\r\n\r\n\r\n    //--------------------------- READ PDF ------------------------------\r\n    input.addEventListener('change', ()=>{\r\n        fields.forEach(field =>{\r\n            field.exist = false;\r\n            field.start = 0;\r\n            field.end = 0;\r\n            field.content = \"\";\r\n        })\r\n        var readPdf = new ReadPdf(fields, input);\r\n        readPdf.extractText();\r\n    })\r\n\r\n \r\n\r\n});"]}